{{@version 0.0.1}}
<!-- Purchase Order Form -->

{{@include /jam/sys/html/header.html}}

{{@database stock}}

{{@get stock_supplier_order filter _id = stock_supplier_order._id}}
{{@get stock_supplier filter _id = stock_supplier_order.supplier_id}}
{{@get stock_container filter _id = stock_supplier_order.container_id}}
{{@get stock_location filter id = stock_supplier_order.location_id}}
{{@X stock_supplier._id}}{{@X stock_supplier.name}}

<style>
/* min height hack for angular */
div.uk-grid { padding-bottom:2000px;}
</style>

<style type="text/css">
	label {text-align: right;}
	.uk-form-label {width:100px !important;}
	.uk-form-controls {margin-left: 115px !important;}
</style>

<div class="uk-container uk-container-center">
	<h3>Purchase Order</h3>

	<div class="uk-grid">

		<form name="purchaseOrderForm" class="uk-form uk-form-horizontal">

			<div class="uk-width-9-10">
				{{@html input hidden stock_supplier_order._id}}
				{{@html input filter stock_supplier.name medium Supplier supplier}}
				{{@html input date stock_supplier_order.delivery_date medium 'Delivery Date' 'require a delivery date field'}}
<!--			</div>
			<div class="uk-width-5-10"> -->
				{{@html input filter stock_container.name medium Container}}
				{{@html input filter stock_location.name medium Location}}

				{{@html button Save primary small
					runAction savePurchaseOrder purchaseOrderForm
					runJam purchaseOrder
				}}
				{{@html button Cancel primary small
					backButton()
				}}
			</div>
			<br>
		</form>

		<div class="uk-width-10-10">

		<form name="purchaseOrderItemForm" class="uk-form uk-form-horizontal">

			<table id="XpurchaseOrderProductTable" class="uk-table /*uk-table-striped*/ uk-table-condensed" style="border:1px solid #dddddd">
				<tr>
					<th> Code </th>
					<th> Supplier Ref </th>
					<th> Product </th>
					<th> Qty </th>
					<th> Order Unit </th>
					<th> Price p/item </th>
					<th> Line Total </th>
					<th> Volume </th>
            		<th>
                		<a href="" class="uk-button uk-button-mini uk-button-success" onClick="Xalert('addItem')">
                    		<i class="uk-icon-plus"></i>
                		</a>
            		</th>
				</tr>
{{@each stock_supplier_order_item filter stock_supplier_order_id = stock_supplier_order._id}}
	{{@get stock_product filter id = stock_supplier_order_item.stock_product_id}}
	{{line.volume = (stock_product.volume * stock_supplier_order_item.qty)}}
	{{@sum line.volume as total.volume}}
	{{ref = ''}}
				<tr>
					<td> {{@html inp text stock_product.code small}} </td>
					<td> {{ref}} </td>
					<td> {{@html inp text stock_product.name}} </td>
					<td> {{@html inp text stock_supplier_order_item.qty small}} </td>
					<td> -Unit- </td>
					<td> {{stock_product.cost}} </td>
					<td> {{stock_product.cost * stock_supplier_order_item.qty}} </td>
					<td> {{line.volume}} </td>
            		<td>
                		<a href="" class="uk-button uk-button-mini uk-button-danger" onClick="Xalert('deleteItem')">
                    		<i class="uk-icon-trash"></i>
                		</a>
            		</td>
				</tr>
{{@end}}
				<tr>
					<td colspan=7> <center> Container volume {{stock_container.volume}}. Free volume {{stock_container.volume - total.volume}}.</td>
					<td> {{line.volume}} </td>
					<td></td>
				</tr>
			</table>
</form>

		</div>
			
	</div>	<!-- uk-grid -->

</div>	<!-- uk-container -->


{{@action savePurchaseOrder}}
	{{stock_container.uid = getUid}}
	{{@new item stock_container}}
{{@end}}

<script>
	window.onload = function() {
		editableGrid = new EditableGrid("GridAttach", { sortIconUp: "/jam/sys/extern/editablegrid/img/close-twisty.png", sortIconDown: "/jam/sys/extern/editablegrid/img/open-twisty.png"}); 
		// we build and load the metadata in Javascript
		editableGrid.load({ metadata: [
			{ name: "rowid", datatype: "integer", editable: false },
			{ name: "product_code", datatype: "string", editable: true },
			{ name: "supplier_ref", datatype: "string", editable: false },
			{ name: "product_name", datatype: "string", editable: true, values:
				{
{{@each stock_product}}
				'{{stock_product.code}}' : '{{stock_product.name}}', 
{{@end}}
				},
			},
			{ name: "qty", datatype: "integer", editable: true },
			{ name: "unit", datatype: "string", editable: false },
			{ name: "price", datatype: "double(2)", editable: false },
			{ name: "line_total", datatype: "double(2)", editable: false },
			{ name: "volume", datatype: "double(4)", editable: false },
		]});
		// then we attach to the HTML table and render it
		editableGrid.attachToHTMLTable('purchaseOrderProductTable');
		editableGrid.renderGrid();
    } 
</script>

{{@include /jam/sys/html/footer.html}}

