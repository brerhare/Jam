{{@include /jam/sys/html/header.html}}
{{@include /jam/css/style.css}}

{{@include /jam/run/menu.jam}}

{{@database befriending_wireflydesign_com}}

<style>
.exportButton{
	color:#ffffff;
	background-color:#009dd8;
    background-image: linear-gradient(to bottom,#00b4f5,#008dc5);
    border-color: rgba(0,0,0,.2);
    border-bottom-color: rgba(0,0,0,.4);
    text-shadow: 0 -1px 0 rgba(0,0,0,.2);
	padding:7px 15px;
	max-width: 300px;
	text-align:center;
	border-radius: 3px;
}
.exportButton a{ color:#fff;}
</style>

<br>
{{@html container start center css='max-width:1080px; Xpadding:0}}

<div name="content">
	<center><h3> Volunteer Process - Joining </h3></center>

	<form class="uk-form">
		<input type="text" id="searchInput" placeholder="Type to search">
	</form>

	<div id="dvData">
		<table id='printTable' class="searchTable testgrid uk-table uk-table-condensed" style="border:1px solid #dddddd">
			<tr style='font-weight:bold'>
				<th> Name </th>
				<th style='min-width:80px'> DoB </th>
				<th> Address </th>
				<th> Landline </th>
				<th> Mobile </th>
				<th> Email </th>
			</tr>
{{@each befriender}}
		{{@get global filter id = befriender.global_id}}
			<tr class="rowHighlight" onClick="runAction('showTabs', ['befriender.id={{befriender.id}}'], 'content')">
				<td>{{global.forename}} {{global.surname}}</td>
				<td>{{befriender.dob}}</td>
				<td>{{global.house}} {{global.street}} {{global.area}} {{global.town}} {{global.postcode}}</td>
				<td>{{global.landline}} </td>
				<td>{{global.mobile}} </td>
				<td>{{global.email}} </td>
			</tr>
{{@end}}
		</table>
	</div>
</div>
<br>
<button class="uk-button uk-button-medium uk-button-primary" onClick="printData('printTable')"> Print </button>
<span class='exportButton'>
	<a href="#" class="export">Export spreadsheet</a>
</span>

<script>
function printData(elementName)
{
	var divToPrint=document.getElementById(elementName);
	newWin= window.open("");
	newWin.document.write(divToPrint.outerHTML);
	newWin.print();
	newWin.close();
}

function exportTableToCSV($table, filename) {
	var $rows = $table.find('tr:has(td),tr:has(th)'),
	// Temporary delimiter characters unlikely to be typed by keyboard. This is to avoid accidentally splitting the actual contents
	tmpColDelim = String.fromCharCode(11), // vertical tab character
	tmpRowDelim = String.fromCharCode(0), // null character
	// actual delimiter characters for CSV format
	colDelim = '","',
	rowDelim = '"\r\n"',
	// Grab text from table into CSV formatted string
	csv = '"' + $rows.map(function (i, row) {
		var $row = $(row),
		$cols = $row.find('td:visible,th');
		return $cols.map(function (j, col) {
			var $col = $(col),
			text = $col.text();
			return text.replace(/"/g, '""'); // escape double quotes
		}).get().join(tmpColDelim);
	}).get().join(tmpRowDelim).split(tmpRowDelim).join(rowDelim).split(tmpColDelim).join(colDelim) + '"',
	// Data URI
	csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);
	$(this).attr({
		'download': filename,
		'href': csvData,
		'target': '_blank'
	});
}

// This must be a hyperlink
$(".export").on('click', function (event) {
	// CSV
	exportTableToCSV.apply(this, [$('#dvData>table'), 'export.csv']);
	// IF CSV, don't do event.preventDefault() or return false
	// We actually need this to be a typical hyperlink
});

// Search
var $rows = $('.searchTable tr');
$('#searchInput').keyup(function() {

	var val = '^(?=.*\\b' + $.trim($(this).val()).split(/\s+/).join('\\b)(?=.*\\b') + ').*$',
		reg = RegExp(val, 'i'),
		text;
	$rows.show().filter(function() {


	console.log(this)
	var child = this.firstChild;
	console.log(child);
	var type = this.tagName
	console.log("Type="+type);
	console.log('--------------------------');


		text = $(this).text().replace(/\s+/g, ' ');
		return !reg.test(text);
	}).hide();
});

</script>

{{@html container end}}

{{@include /jam/sys/html/footer.html}}
