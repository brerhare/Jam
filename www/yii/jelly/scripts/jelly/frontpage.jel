[some_sensible_values]
;;;;;;;;;; css.html * = { font-size: 1em; color: #000; font-family: Arial !important; }
css.display = none 
css.overflow = hidden /* (or any type of overflow) avoids position shift on no-margin containers */
css.margin = 0px auto

; Every blob inherits these before adding/overriding
[* : some_sensible_values]

[screen]
child = contentframe
fx.wallpaper-image = /img/bg.jpg
css.display = block

	[contentframe]
	child = fixedheader, carousel, tabs, contentcontainer
	css.display = block
	css.width = 910px	/* if we give an explicit width here, child elements will by default set their width to it */

		[fixedheader]
		child = menu
		css.display = block
		css.position = fixed		/* position it, part 1 */
		css.top = 0px				/* position it, part 2 */
		css.left = 50%				/* centre it, part 1 - middle of the screen. margin-auto doesnt apply here because of 'fixed' */
		css.margin-left = -250px	/* centre it, part 2 - pull left by half the item's width */
		css.width = 500px
		css.height = 114px
		css.background-image = url(/img/header.png)
		css.z-index = 10000			/* keep it in front */

			[menu]
			css.display = block
			css.margin-top = 35px 
			css.margin-left = 50px
			addon.menu.megamenu.anchortext = Manu
			;addon.menu.megamenu.sql = CarouselBlock::model()->findAll(array('order'=>'sequence'));
			;addon.menu.megamenu.column = content


		[carousel]
		css.display = block
		css.margin-top = 80px
		;css.height = 250px			/* dont set the height - carousel will set it */
		addon.carousel.flexslider.animation = fade
		addon.carousel.flexslider.source = db
		addon.carousel.flexslider.sql = CarouselBlock::model()->findAll(array('order'=>'sequence'));
		addon.carousel.flexslider.column = content

		[tabs]
		a=b

		; [content] needs a container because we want a bit of space around the actual content.

		[contentcontainer]
		child = content
		css.display = block
		css.background-color = white

			[content]
			css.display = block
			css.background-color = white

			html.h1 = First heading1 for the page
			html.h1 = Second heading1 for the page
			html.h2 = This is heading2 for the page
			html.h3 = This is heading3 for the page
			html.h5 = This is heading5 for the page
			html.h6 = This is heading6 for the page
			html.p = A paragraph of stuff. Has a <i>horrible</i> font. Has a nice <b>shadow</b> effect
			html.p = Another paragraph. Blah blah blah <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blahblah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah
			;html.p = $content
