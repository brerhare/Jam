{{@version 0.0.1}}
<!-- Purchase Order items -->

<div class="uk-container uk-overflow-container uk-container-center">
	<form name="purchaseOrderItemForm" class="uk-form uk-form-horizontal">

		<div class="uk-grid">

			<div class="uk-width-10-10">

				<table id="lineitemTable" class="uk-table /*uk-table-striped*/ uk-table-condensed" style="border:1px solid #dddddd">
				<thead>
					<tr>										<!-- HEADING ROW --->
						<th> </th>
						<th> Code </th>
						<th style='max-width:185px;'> Product </th>
						<th> Qty </th>
						<th> Pack </th>
						<th> Item Price </th>
						<th> Line Total </th>
            			<th style='min-width:50px;'>
                			<button type='button' class="uk-button uk-button-mini uk-button-success" onClick="showNewRow()">
                    			<i class="uk-icon-plus"></i>
                			</button>
            			</th>
					</tr>
					<tr id='newRow' style='display:none'>		 <!-- NEW ROW --->
						<td> </td>
						<td> {{@html text group=newrow field=stock_product.code size=small}} </td>
						<td> {{@html filter group=newrow field=stock_supplier_order_item.stock_product_id pickfield=stock_product.name size=medium}} </td>
						<td> {{@html text group=newrow field=stock_supplier_order_item.pack_qty size=small}} </td>
						<td id="newRowPackSelectTD" class="newrow"  name="newRowPackSelectTD"> </td>
						<td> {{@html text group=newrow disabled field=stock_product.cost size=small}} </td>
						<td> {{@html text group=newrow disabled field=linetotal size=small}} </td>
            			<td>
                			<button type='button' class="uk-button uk-button-mini uk-button-primary" onClick="saveNewRowButtonClick()">
                    			<i class="uk-icon-save"></i>
                			</button>
                			<button type='button' class="uk-button uk-button-mini uk-button-primary" onClick="hideNewRow()">
                    			<i class="uk-icon-remove"></i>
                			</button>
            			</td>
					</tr>
					</thead>
					<tbody name='linebody'>

					</tbody>
				</table>

			</div> <!-- uk-width-* -->
		</div>	<!-- uk-grid -->

		<br>
		<button type='button' class="uk-button uk-button-small uk-button-primary" onClick="print('printing')">Print</button>
		<span id='eml'>
		{{@html button Email primary small
			runAction emailPurchaseOrder [purchaseOrderForm]
			document.getElementById('eml').innerHTML='Email sent';
		}}
		</span>

	</form>

</div>	<!-- uk-container -->

{{@action showOrderLines}}
	{{total.cost = 0}}
	{{total.volume = 0}}
	{{total.weight = 0}}
	{{@each stock_supplier_order_item filter stock_supplier_order_id = stock_supplier_order.id, order by id DESC}}
		{{@get stock_container filter id = stock_supplier_order.container_id}}
		{{@get stock_product filter id = stock_supplier_order_item.stock_product_id}}
		{{@get stock_pack filter id = stock_supplier_order_item.stock_pack_id}}
		{{line.cost = stock_product.cost * stock_supplier_order_item.total_qty}}
		{{total.cost = total.cost + line.cost}}
		{{line.volume = stock_product.volume * stock_supplier_order_item.total_qty}}
		{{total.volume = total.volume + line.volume}}
		{{line.weight = stock_product.weight * stock_supplier_order_item.total_qty}}
		{{total.weight = total.weight + line.weight}}
					<tr>
						<td> {{@html text hidden field=stock_supplier_order_item.id}} </td>
						<td> {{@html text disabled field=stock_product.code size=small}} </td>
						<td>  <input type='text' class='uk-form-width-' value='{{stock_product.name}}' disabled></td>
<!-- above line is a hack for line below because name=xxx is zeroth element in first display line not input line -->
				<!--	<td> {{@html text disabled field=stock_product.name}} </td> -->
						<td> {{@html text field=stock_supplier_order_item.pack_qty size=small}} </td>
						<td> {{@html text disabled field=stock_pack.unit size=small}} </td>
						<td> {{@html text disabled field=stock_product.cost size=small}} </td>
						<td> {{@html text disabled field=line.cost size=small}} </td>
            			<td>
                			<button type='button' class="uk-button uk-button-mini uk-button-danger" onClick="deleteRow('{{stock_supplier_order_item.id}}')">
                    			<i class="uk-icon-trash"></i>
                			</button>
            			</td>
					</tr>
	{{@end}}
					<tr>
						<td>&nbsp</td>
						<td colspan=2>
							Volume {{total.volume}} ({{stock_container.volume - total.volume}} free)
						</td>
						<td colspan=2>
							Weight {{total.weight}} ({{stock_container.weight - total.weight}} free)
						</td>
						<td>&nbsp</td>
						<td> {{total.cost}} </td>
						<td></td>
					</tr>
<!--
					<tr>
						<td colspan=6> </td>
						<td> {{total.cost}} </td>
						<td> {{total.volume}} used</td>
						<td style='text-align:right'> <b>{{stock_container.volume - total.volume}} free</b>.</td>
					</tr>
-->
{{@end}}

{{@action emailContent}}
	TESTCONTENTFROMANACTION
	<table id="lineitemTable" class="uk-table /*uk-table-striped*/ uk-table-condensed" style="border:1px solid #dddddd">
		<thead>
			<tr>										<!-- HEADING ROW --->
				<th> Code </th>
				<th> Your ref </th>
				<th style='max-width:185px;'> Product </th>
				<th> Qty </th>
				<th> Pack </th>
				<th> Item Cost </th>
				<th> Line Total </th>
			</tr>
		</thead>
		<tbody>
			{{@each stock_supplier_order_item filter stock_supplier_order_id = stock_supplier_order.id, order by id DESC}}
				{{@get stock_container filter id = stock_supplier_order.container_id}}
				{{@get stock_product filter id = stock_supplier_order_item.stock_product_id}}
				{{@get stock_pack filter id = stock_supplier_order_item.stock_pack_id}}
				{{line.cost = stock_product.cost * stock_supplier_order_item.total_qty}}
				<tr>
					<td> {{@html text disabled field=stock_product.code small}} </td>
					<td> {{@html text disabled field=stock_supplier_order_item.supplier_product_ref size=small}} </td>
					<td>  <input type='text' class='uk-form-width-' value='{{stock_product.name}}' disabled></td>
	<!-- above line is a hack for line below because name=xxx is zeroth element in first display line not input line
						<!--	<td> {{@html text disabled stock_product.name}} </td> -->
					<td> {{@html text text field=stock_supplier_order_item.pack_qty size=small}} </td>
					<td> {{@html text disabled field=stock_pack.unit size=small}} </td>
					<td> {{@html text disabled field=stock_product.cost size=small}} </td>
					<td> {{@html text disabled field=line.cost size=small}} </td>
				</tr>
			{{@end}}
		</tbody>
	</table>
{{@end}}

{{@action emailPurchaseOrder}}
	{{@email k@microboot.com kim@microboot.com 'Purchase order' action:emailContent}}
{{@end}}

{{@action newPurchaseOrderRow}}
	{{stock_supplier_order_item.uid = 1}}
	{{stock_supplier_order_item.supplier_product_ref = TODO}}
	{{stock_supplier_order_item.stock_supplier_order_id = stock_supplier_order.id}}
	{{@new item stock_supplier_order_item notify=ok}}
{{@end}}

{{@action deletePurchaseOrderRow}}
    {{@remove item stock_supplier_order_item}}
{{@end}}

{{@action changeOrderQty}}
	{{@amend item stock_supplier_order_item notify=ok}}
{{@end}}

{{@action recalcOrder}}
	{{total.cost = 0}}
	{{@each stock_supplier_order_item filter stock_supplier_order_id = stock_supplier_order.id}}
		{{@get stock_product filter id = stock_supplier_order_item.stock_product_id}}
		{{@get stock_pack filter id = stock_supplier_order_item.stock_pack_id}}
		{{stock_supplier_order_item.total_qty = stock_supplier_order_item.pack_qty * stock_pack.qty}}
		{{@amend item stock_supplier_order_item}}
		{{total.cost = total.cost + stock_product.cost * stock_supplier_order_item.total_qty}}
	{{@end}}
	{{stock_supplier_order.price_total = total.cost}}
	{{stock_supplier_order.total = total.cost}}
	{{@amend item stock_supplier_order}}
{{@end}}

{{@action checkOrderProductByCode}}
	{{@get stock_product filter code = stock_product.code}}
	{{@get stock_supplier_order_item filter stock_supplier_order_id = stock_supplier_order.id, stock_product_id = stock_product.id}}
	<select id="newRowPackSelect" onchange="onChangePack(this);">
	{{@each stock_pack filter stock_product_id = stock_product.id}}
		<option value="{{id}}">{{unit}}</option>
	{{@end}}
	</select>
{{@end}}

{{@action checkOrderProductById}}
	{{@get stock_product filter id = stock_supplier_order_item.stock_product_id}}
	{{@get stock_supplier_order_item filter stock_supplier_order_id = stock_supplier_order.id, stock_product_id = stock_supplier_order_item.stock_product_id}}
	<select id="newRowPackSelect" onchange="onChangePack(this);">
	{{@each stock_pack filter stock_product_id = stock_product.id}}
		<option value="{{id}}">{{unit}}</option>
	{{@end}}
	</select>
{{@end}}

<script>

	var NEW_product_id = 0;
	var NEW_pack_qty = 0;
	var NEW_pack_id = 0;

	function onChange_stocksupplierorder_containerid(obj) {
		showOrderLines();
	}

	function showNewRow() {
		if (document.getElementById('newRow').style.display == 'table-row')
			return hideNewRow();					// toggle
		initializeNewRow();
		obj = get('stock_supplier_order.id');
		if ((obj.value == "") || (obj.value == "0"))
			alert('Save header details before adding stock');
		else
			document.getElementById('newRow').style.display = 'table-row';
	}
	function hideNewRow() {
		document.getElementById('newRow').style.display = 'none';
	}

	function deleteRow(id) {
		window.event.cancelBubble = true;   // Prevent any further events
		var result = confirm('Confirm delete');
		if (result)
			runAction('deletePurchaseOrderRow', ['stock_supplier_order_item.id='+id], '', showOrderLines);
	}

	function saveNewRowButtonClick() {
		productId = getByGroupAndName('newrow', 'stock_supplier_order_item.stock_product_id');
//alert ('prodid='+NEW_product_id + ' qty='+NEW_pack_qty+'packid='+NEW_pack_id); return;
		if (NEW_product_id  == '')	{
			alert('No product selected');
			return;
		}
		if (isNaN(NEW_pack_qty) || (Number(NEW_pack_qty) < 1)) {
			alert('Invalid quantity');
			return;
		}
		runAction('newPurchaseOrderRow', ['stock_supplier_order.id', 'stock_supplier_order_item.stock_product_id=' + NEW_product_id, 'stock_supplier_order_item.stock_pack_id=' + NEW_pack_id, 'stock_supplier_order_item.pack_qty=' + NEW_pack_qty], '', _afterNewRowAdded);
	}

	function _afterNewRowAdded() {
		hideNewRow();
		runAction('recalcOrder', ['stock_supplier_order.id'], '', addedNewRow);
	}
	function addedNewRow() {
		showOrderLines();
		initializeNewRow();
	}

	// Grid product lookup by code. See if the product exists and if its already on order
	function onChange_stockproduct_code(obj) {
		runAction('checkOrderProductByCode', ['stock_product.code=' + obj.value, 'row=' + getRowgroupName(obj)], 'newRowPackSelectTD', checkedOrderProductByCode);
	}
	function checkedOrderProductByCode() {
		productObj = get('stock_product.id');						// oob
		if ((productObj == null) || (productObj.value == '-1')) {
			alert('No product with that code');
			return;
		}
		orderItemObj = get('stock_supplier_order_item.id');			// oob
		if ((orderItemObj == null) || (orderItemObj.value != '-1')) {
			alert('Product already on order');
			return;
		}
		// Update the name-search filter content with the product name and its hidden input with the product id
		var obj = getByGroupAndName('newrow', 'stock_supplier_order_item.stock_product_id');
		obj.value = productObj.value;		// store the id in the hidden part
		NEW_product_id = productObj.value;	// store for saving
		productNameObj = get('stock_product.name');					// oob
		searchFieldObj = get('AUTOCOMPLETE_stock_product.name');
		searchFieldObj.value = productNameObj.value;
		var objSelect = document.getElementById('newRowPackSelect');
		NEW_pack_id = objSelect.options[objSelect.selectedIndex].value;
		document.getElementsByName('stock_supplier_order_item.stock_pack_id')[0].value = NEW_pack_id;	// initial case selection
	}

	// Grid filter on product name
	function onChange_stocksupplierorderitem_stockproductid(obj) {
		productId =  get('stock_supplier_order_item.stock_product_id');
		NEW_product_id = productId.value;	// store for saving
		runAction('checkOrderProductById', ['stock_supplier_order.id', 'stock_supplier_order_item.stock_product_id'], 'newRowPackSelectTD', checkedOrderProductById);
	}
	function checkedOrderProductById() {	// note the preceding action checks exist and wipes the orderitem record, hence we store in NEW_xxx
		orderItemObj = document.getElementsByName('stock_supplier_order_item.id')[0];
        if ((orderItemObj == null) || (orderItemObj.value != '-1')) {
            alert('Product already on order');
            return;
        }
		var objSelect = document.getElementById('newRowPackSelect');
		NEW_pack_id = objSelect.options[objSelect.selectedIndex].value;
		document.getElementsByName('stock_supplier_order_item.stock_pack_id')[0].value = NEW_pack_id;	// initial case selection
	}

	// Order quantity changed - called for new and amend row
	function onChange_stocksupplierorderitem_packqty(obj) {
		NEW_pack_qty = obj.value;					// store for saving
		if (hasGroup(obj, 'newrow'))				// Only do this if NOT adding a record
			return;
		objId =  getSiblingByName(obj, 'stock_supplier_order_item.id');	// @@is this get really nec, seeing as next runaction use it by name too?
		runAction('changeOrderQty', ['stock_supplier_order_item.id=' + objId.value, 'stock_supplier_order_item.pack_qty=' + obj.value], '', afterQtyChanged);
	}
	function afterQtyChanged() {
		runAction('recalcOrder', ['stock_supplier_order.id'], '', showOrderLines);
	}

	// Pack changed - called for new row only
	function onChangePack(obj) {
		NEW_pack_id = obj.value;					// store for saving
		var objSelect = document.getElementById('newRowPackSelect');
		document.getElementsByName('stock_supplier_order_item.stock_pack_id')[0].value = objSelect.options[objSelect.selectedIndex].value;	// case selection
	}

	function showOrderLines() {
		runAction('showOrderLines', ['stock_supplier_order.id', 'stock_supplier_order.container_id'], 'linebody');
	}

	function initializeNewRow() {
		var groupArr = getGroupArray('newrow');
		for (i = 0; i < groupArr.length; i++)
			groupArr[i].value = '';
		searchFieldObj = get('AUTOCOMPLETE_stock_product.name');
		searchFieldObj.value = '';
		document.getElementById('newRowPackSelectTD').innerHTML = '';
		NEW_product_id = 0;
		NEW_pack_qty = 0;
		NEW_pack_id = 0;
	}

</script>

